<?xml version="1.0"?>
<tool id="tripaille_analysis_load_interpro" name="analysis" version="@WRAPPER_VERSION@.0">
 <description>load_interpro</description>
	<macros>
		<import>macros.xml</import>
	</macros>
	<expand macro="requirements"/>
	<command detect_errors="aggressive">
tripaille analysis load_interpro
'$name'
'$program'
'$programversion'
'$sourcename'
'$interpro_output'

#if $interpro_parameters:
  --interpro_parameters '$interpro_parameters'
#end if
#if $query_re:
  --query_re '$query_re'
#end if
#if $query_type:
  --query_type '$query_type'
#end if
#if $query_uniquename:
  $query_uniquename
#end if
#if $parse_go:
  $parse_go
#end if
#if $no_wait:
  $no_wait
#end if
#if $algorithm:
  --algorithm '$algorithm'
#end if
#if $sourceversion:
  --sourceversion '$sourceversion'
#end if
#if $sourceuri:
  --sourceuri '$sourceuri'
#end if
#if $description:
  --description '$description'
#end if
#if $date_executed:
  --date_executed '$date_executed'
#end if

| jq -S . > $results
</command>
	<inputs>
    <!-- arguments -->
	<param name="name" label="Name" argument="name" type="text" help="analysis name" />
	<param name="program" label="Program" argument="program" type="text" help="analysis program" />
	<param name="programversion" label="Programversion" argument="programversion" type="text" help="analysis programversion" />
	<param name="sourcename" label="Sourcename" argument="sourcename" type="text" help="analysis sourcename" />
	<param name="interpro_output" label="Interpro Output" argument="interpro_output" type="text" help="Path to the InterProScan file to load (single XML file, or directory containing multiple XML files)" />

    <!-- options -->
	<param name="interpro_parameters" label="Interpro Parameters" argument="interpro_parameters" type="text" help="InterProScan parameters used to produce these results" />
	<param name="query_re" label="Query Re" argument="query_re" type="text" help="The regular expression that can uniquely identify the query name. This parameters is required if the feature name is not the first word in the blast query name." />
	<param name="query_type" label="Query Type" argument="query_type" type="text" help="The feature type (e.g. 'gene', 'mRNA', 'contig') of the query. It must be a valid Sequence Ontology term." />
	<param name="query_uniquename" label="Query Uniquename" argument="query_uniquename" type="boolean" truevalue="--query_uniquename" falsevalue="" help="Use this if the query_re regular expression matches unique names instead of names in the database." />
	<param name="parse_go" label="Parse Go" argument="parse_go" type="boolean" truevalue="--parse_go" falsevalue="" help="Load GO annotation to the database" />
	<param name="no_wait" label="No Wait" argument="no_wait" type="boolean" truevalue="--no_wait" falsevalue="" help="Do not wait for job to complete" />
	<param name="algorithm" label="Algorithm" argument="algorithm" type="text" help="analysis algorithm" />
	<param name="sourceversion" label="Sourceversion" argument="sourceversion" type="text" help="analysis sourceversion" />
	<param name="sourceuri" label="Sourceuri" argument="sourceuri" type="text" help="analysis sourceuri" />
	<param name="description" label="Description" argument="description" type="text" help="analysis description" />
	<param name="date_executed" label="Date Executed" argument="date_executed" type="text" help="analysis date_executed (yyyy-mm-dd)" />

	</inputs>
	<outputs>
		<data format="json" name="results"/>
	</outputs>
	<help>
Create an Interpro analysis

@HELP@
	</help>
</tool>
